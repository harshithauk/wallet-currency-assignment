# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
    

  test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - run:
         name: "Setup custom environment variables"
         command: |
          echo 'export JAVA_HOM'="/usr/libexec/java_home -v <version>"'>> $BASH_ENV
          ./gradlew test

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
         command: ./gradlew deploy

      

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_and_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - build
            - test
      - deploy:
          requires:
            - hold